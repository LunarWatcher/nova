name: CI

on:
  push:
    branches: [ master, develop ]
  pull_request:
    branches: [ master, develop ]

jobs:
  pre-commit:
    if: "!contains(github.event.head_commit.message, '[skip-ci]')"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive
      # Set up python; requires for SCons and Conan
      - uses: actions/setup-python@v2
      - name: Run hooks
        run: |
          wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | sudo apt-key add -
          echo "deb http://apt.llvm.org/bionic/ llvm-toolchain-bionic-10 main" | sudo tee -a /etc/apt/sources.list
          sudo apt update
          sudo apt install clang-format-10
          sudo ln -sf /usr/bin/clang-format-10 /usr/bin/clang-format
          python3 -m pip install -r requirements.txt
          pre-commit run --all-files
  build:
    if: "!contains(github.event.head_commit.message, '[skip-ci]')"
    # Contains the build matrix, and yes, it's a bit of a clusterfuck
    strategy:
      fail-fast: false
      matrix:
        # Config: contains the system setup.
        config:
          - g++-9-ubuntu
          - clang++-9-ubuntu
          - clang++-11-macos
          - msvc-bundled-windows

        include:
          # This contains the actual definition of usable stuff for each configuration.
          # This can also include packages in the future, if I can find out
          # how GH Actions "if" works. /shrug
          - config: g++-9-ubuntu
            os: ubuntu-latest
            compiler: g++-9
            ccompiler: gcc-9
            folder: gcc.posix
          - config: clang++-9-ubuntu
            os: ubuntu-latest
            compiler: clang++-9
            ccompiler: clang-9
            folder: clang.posix
          - config: clang++-11-macos
            os: macos-latest
            compiler: clang++
            ccompiler: clang
            folder: clang.darwin
          - config: msvc-bundled-windows
            os: windows-latest
            compiler: cl
            ccompiler: cl
            folder: msvc.win32
    # The OS to run on
    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v2
      with:
        submodules: recursive
    # Set up python; requires for SCons and Conan
    - uses: actions/setup-python@v2
    - name: Set env
      # Both CXX and CC needs to be set
      run: |
        echo "CXX=${{ matrix.compiler }}" >> $GITHUB_ENV
        echo "CC=${{ matrix.ccompiler }}" >> $GITHUB_ENV
        ${{ matrix.compiler }} --version
    # Install conan
    - name: Install conan
      run: |
        python -m pip install conan
        conan profile new --detect default
    # Install SCons
    - name: Install dependencies
      run: |
        python -m pip install scons
    - name: Build
      run: |
        scons -j 2 debug=False
    #- name: Build and run test
      ## The test doesn't strictly have to be run separately, but as the test base grows,
      ## I'd like to be able to separate test failure from build failure
      #run: |
        #scons test -j 2 debug=False
